name: Bitstream Generation

# Only run for pull requests as we care contribution to the master
# - There are changes in RTL files
on:
  pull_request:
    path:
      - ".github/**"
      - "arch/**"
      - "benchmarks/**"
      - "openfpga_tasks/**"
      - "Makefile"
      - "utils/**"
  push:
    branches:
      - 'main'

jobs:
  detect_arch_changes:
    runs-on: ubuntu-latest
    outputs:
      source_modified: ${{ steps.git-diff-arch.outputs.source_modified }}
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Runner workspace path
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
          mkdir -p "${{ github.workspace }}"

      - name: Checkout code
        uses: actions/checkout@v2.1.0

      - name: Detect architecture/script changes
        id: git-diff-arch
        run: |
          git fetch
          git diff origin/main HEAD --name-status -- ':.github/**' ':arch/**' ':benchmarks/**' ':openfpga_tasks/**' 'Makefile' 'utils/**'
          if git diff origin/main HEAD --name-status --exit-code -- ':.github/**' ':arch/**' ':benchmarks/**' ':openfpga_tasks/**' 'Makefile' 'utils/**'; then
            echo "::set-output name=source_modified::false"
          else
            echo "Detect changes in architecture and related scripts. Require bitstream generation"
            echo "::set-output name=source_modified::true"
          fi

  generate_bitstream:
    name: Bitstream generation
    needs: detect_arch_changes
    runs-on: [self-hosted, Linux, X64]
    # Triggered when a pull request is a label of 'force_bitstream_generation' or on main branch
    if: needs.detect_arch_changes.outputs.source_modified == 'true' || contains(github.event.pull_request.labels.*.name, 'force_bitstream_generation') || github.ref == 'refs/heads/main'
    strategy:
      fail-fast: false
      matrix:
        fabric_name: ["ultimate", "dp"]
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Runner workspace path
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
          mkdir -p "${{ github.workspace }}"

      - name: Checkout repo
        uses: actions/checkout@v2.4.0

      - name: Checkout submodule
        run: |
          make checkout_benchmarks
          make checkout_utils

      - name: Running bitstream generation
        shell: bash
        run: |
          make update_bitstream_all_for_fabric FABRIC_NAME=${{ matrix.fabric_name }} OPENFPGA_TASK_OPTIONS="--maxthreads 6" NUM_JOBS=8

      - name: Create benchmark links
        shell: bash
        run: |
          cd benchmarks
          make all

      - name: Compare bitstream files
        shell: bash
        run: |
         git add dv/bitstreams/${{ matrix.fabric_name }}/*/*/*.xml -f
         git add dv/bitstreams/${{ matrix.fabric_name }}/*/*/*.bit -f
         git config user.name "Github bot"
         git commit -a -m 'A local commit to cache new generated bitstream files'
         make uncompress_bitstream_all_for_fabric FABRIC_NAME=${{ matrix.fabric_name }}

      - name: Detect changes on golden bitstream files
        id: git-diff-golden-bitstream
        run: |
         git diff --name-status -- ':dv/bitstreams/${{ matrix.fabric_name }}/*/*/*.xml' ':dv/bitstreams/${{ matrix.fabric_name }}/*/*/*.bit'
         if git diff --name-status --exit-code -- ':dv/bitstreams/${{ matrix.fabric_name }}/*/*/*.xml' ':dv/bitstreams/${{ matrix.fabric_name }}/*/*/*.bit'; then
           echo "::set-output name=golden_changes::false"
         else
           echo "Detect changes in golden bitstream files."
           echo "::set-output name=golden_changes::true"
         fi

      - name: Check consistency with golden bitstream files
        if: steps.git-diff-golden-bitstream.outputs.golden_changes == 'true'
        run: |
          echo "Golden bitstreams are changed. Request further review!"
          echo "Detailed changes are shown below:"
          git diff -- ':dv/bitstreams/${{ matrix.fabric_name }}/*/*/*.xml' ':dv/bitstreams/${{ matrix.fabric_name }}/*/*/*.bit'
          exit 1

      - name: Compare vpr log
        shell: bash
        run: |
         git add reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.net -f
         git add reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.place -f
         git add reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.route -f
         git config user.name "Github bot"
         git commit -a -m 'A local commit to cache new generated vpr log files'
         cd reports
         make uncompress_vpr_log_all_for_fabric FABRIC_NAME=${{ matrix.fabric_name }}

      - name: Detect changes on golden vpr results
        id: git-diff-golden-vprlog
        run: |
         git diff --name-status -- ':reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.net' ':reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.place' ':reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.route'
         if git diff --name-status --exit-code -- ':reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.net' ':reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.place' ':reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.route'; then
           echo "::set-output name=golden_changes::false"
         else
           echo "Detect changes in golden vpr log files."
           echo "::set-output name=golden_changes::true"
         fi

      - name: Check consistency with golden vpr results
        if: steps.git-diff-golden-vprlog.outputs.golden_changes == 'true'
        run: |
          echo "Golden vpr logs are changed. Request further review!"
          echo "Detailed changes are shown below:"
          git diff -- ':reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.net' ':reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.place' ':reports/${{ matrix.fabric_name }}/vpr_results/*/*/*/*.route'
          exit 1
